.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH JULIUS 1 LOCAL
.UC 6
.SH NAME
Julius - open source multi-purpose LVCSR engine
.SH SYNOPSIS
.B julius [-C jconffile] [options ...]
.SH DESCRIPTION
.I Julius
は数万語を対象とした大語彙連続音声認識を行うことのできるフリーの認識エ
ンジンです．単語3-gramを用いた2パス構成の段階的探索により高精度な認識を
行うことができます．
.PP
.I Julius
を用いて音声認識を行うには，他にN-gram言語モデル，認識用単語辞書，
および音韻モデルが必要です．標準的なモデル形式(ARPA標準形式およびHTK形
式)をサポートしており，任意の単語・音素単位を用いることができます．ユー
ザは自分の作成した言語モデルや音響モデルを組み合わせて任意の規模や対象
の音声認識システムを構築することができます．基本モデルの入手先や作成方
法については，付属ドキュメントなどを別途ご覧ください．
.PP
認識対象としてマイク入力，録音済みの音声波形ファイルおよび特徴抽出した
パラメータファイルに対応しています．語彙数の上限は 65,535 語です．
.SH "使用モデル"
.I Julius
では以下のモデルを用います．
.Ip "音素モデル" 10
音素HMM(Hidden Markov Model)を用います．音素モデル(monophone)，
音素環境依存モデル(triphone)，tied-mixtureモデル，phonetic
tied-mixture モデルを扱えます．音素環境依存モデルの場合は単語間の依存
関係も考慮されます．
.I HTK
のHMM定義言語で書かれたHMM定義ファイルを読み込むことができます．
また，付属ツール
.I mkbinhmm
であらかじめバイナリ形式に変換しておけば高速に読み込むことができます．
.Ip "言語モデル" 10
言語モデルとして2-gramおよび逆向きの3-gramを用います．
ARPA standard format およびそれらを付属の
.I mkbingram
で変換したバイナリ形式のN-gramを読み込むことができます．
.SH "音声入力"
デバイスからの直接入力および音声ファイルの認識を行えます．マイクロフォ
ン端子やDatLink(NetAudio)，およびクライアントツール
.I adintool
を用いたネットワーク経由での直接入力に対応しています．
音声ファイルの形式は 16bit WAVE ファイル（無圧縮）およびRAWファイル
(16bit, BigEndian) です．コンパイル時にlibsndfileをリンクすることでさ
らに多くの形式に対応可能です．また，HTK形式の特徴パラメータファイルで
与えることもできます．
.sp
注意：Julius内部で計算できる特徴量はMFCC_E_D_N_Zのみです．これ以外の特
徴抽出を必要とするHMMを使う場合は，マイク入力や音声波形ファイル入力は
使えません．その場合，HTKなどで抽出した特徴パラメータファイルを与える
ようにして下さい．
.SH "探索アルゴリズム"
.I Julius
の認識処理は2パス構成です．まず第1パスで入力全体を完全に処理し，中間結
果を出力します．モデルは単語2-gramと単語HMMの木構造ネットワークを用い
ます．解探索はleft-to-rightにフレーム同期ビーム探索を行います．
.PP
第2パスでは3-gramを用いて逆向きに探索を行い，より精度の高い認識結果を
求めます．第1パスの中間結果を絞り込み＋先読み情報として用い，単語単位
のスタックデコーディングを行います．
.PP
音素環境依存モデル(triphone)を用いたときは，第1パスおよび第2パスで単語
間の音素環境依存を考慮します．またtied-mixtureやphonetic tied-mixture
モデルではGaussian pruningによる高速な音響尤度計算を行います．
.PP
アルゴリズムの詳細に関しては別途関連文書をご覧ください．
.SH "OPTIONS"
以下のオプションで使用モデルやパラメータなどを指定します．コマンドライ
ン上ですべて指定することもできますが，
.I jconf設定ファイル
として１つのテキストファイル内にまとめて記述しておき，起動時に "-C" で
指定することができます．
.PP
以下は全てのオプションの説明です．
.SS 音声入力ソース
.Ip "-input {rawfile|mfcfile|mic|adinnet|netaudio|stdin}"
音声データの入力ソースを選択する．それぞれ 'rawfile' は波形ファイル，
'mfcfile' はHTK形式の特徴量ファイル，'mic' はマイクロフォン入力，'
adinnet' は adintool などのクライアントからのネットワーク経由入力，'
stdin' は標準入力からの入力を指定する．
.sp
サポートする音声波形ファイル形式は 16bit WAV(モノラル，無圧縮)および
RAW (16bit, モノラル, BigEndian) ．コンパイル時にlibsndfileが
あればさらに多くの形式が扱える．実際にその実行バイナリでどの形式がサ
ポートされているかはオプション "-help" で確認できる．なお標準入力につ
いてはWAVおよびRAWのみサポートする．
.br
(default: mfcfile)
.Ip "\-filelist file"
(-input rawfile|mfcfile 時) 認識対象のファイルが複数ある場合に，そのリス
トを与えてバッチ処理させる．
.Ip "\-adport portnum"
(-input adinnet 時) adinnet で使用するポート番号．
.br
(default: 5530)
.Ip "\-NA server:unit"
(-input netaudio) 接続するDatLinkサーバ名とユニットID．netaudio 使用時
必須．
.Ip "\-zmean  \-nozmean"
音声入力時に，DC成分の除去を行うかどうかを指定する．DC成分はファイル入力
の場合全体から計算される．マイク入力の場合は，最初の 48000 サンプル
（16kHzサンプリングで3秒）から算出された値がその後用いられる．
(default: 行わない (-nozmean))
.Ip "\-zmeanframe  \-nozmeanframe"
音声入力時に，フレーム単位でDC成分の除去を行うかどうかを指定する．
これはHTKのZMEANSOURCEオプションと同じ動作となる．"\-zmean" と同時に
指定できない．(default: 行わない (-nozmeanframe))
.Ip "\-nostrip"
録音デバイスによって生じることのある，録音開始時あるいは終了時の無効な
0 値サンプルの自動除去を行わないようにする．デフォルトは自動除去を行う．
.Ip "\-record directory"
directory 以下に，認識された入力音声データを連番で自動保存する．音声デー
タは切り出された一入力ごとにファイルに記録される．ファイル名は，認識開
始時のシステム時間を表す"年.月日.時分秒.wav" という名前で保存される．
ファイル形式は WAV,16bit,monoral,無圧縮 である．"-rejectshort"併用時は，
棄却された入力も保存される．
.Ip "\-rejectshort msec"
msec で指定されたミリ秒より短い入力を棄却し，認識を行わない．モジュール
モード時はクライアントに '<REJECTED REASON="..."/>' が出力される．"-record"
オプション併用時は，このオプションにより棄却された入力も保存される．
.SS 音声区間検出
.Ip "\-cutsilence"
.Ip "\-nocutsilence"
入力音声に対して音声区間の検出を行うかどうかを明示的に指定．(default: mic また
は adinnet は ON, ファイル入力は OFF)
.Ip "\-lv threslevel"
波形の振幅レベルのしきい値( 0 - 32767)．振幅がこの値を越えたときに
音声区間の開始とみなし，次にこの値を下回ったときに音声区間終了
とする(default: 2000)．
.Ip "\-zc zerocrossnum"
１秒あたりの零交差数のしきい値 (default: 60)
.Ip "\-headmargin msec"
音声区間開始部のマージン．単位はミリ秒
.br
(default: 300)
.Ip "\-tailmargin msec"
音声区間終了部のマージン．単位はミリ秒
.br
(default: 400)
.SS 音響分析
.Ip "\-smpFreq frequency"
音声のサンプリング周波数を Hz で指定する．あるいは"\-smpPeriod"でも指
定可能．このサンプリング周波数は使用する音響モデルの学習条件と一致する
必要があることに注意すること．マイク入力および RAW ファイル入力時には，
このサンプリング周波数を明示的に指定する必要がある．"\-fsize",
"\-fshift", "\-delwin", "\-accwin" で指定する値にも注意すること．
.br
(default: 16000 (Hz = 625ns))
.Ip "\-smpPeriod period"
音声のサンプリング周期をナノ秒で指定する．あるいは"\-smpFreq"でも指
定可能．このサンプリング周波数は使用する音響モデルの学習条件と一致する
必要があることに注意すること．マイク入力および RAW ファイル入力時には，
このサンプリング周波数を明示的に指定する必要がある．"\-fsize",
"\-fshift", "\-delwin", "\-accwin" で指定する値にも注意すること．
.br
(default: 625 (ns = 16000Hz))
.Ip "\-fsize sample"
窓サイズをサンプル数で指定 (default: 400)．
.Ip "\-fshift sample"
フレームシフト幅をサンプル数で指定 (default: 160)．
.Ip "\-preemph value"
Pre-emphasis 係数 (default: 0.97)
.Ip "\-fbank num"
Filterbank channel の数 (default: 24)
.Ip "\-ceplif num"
Cepstral liftering 係数 (default: 22)
.Ip "\-rawe / \-norawe"
Pre-emphasis 前の raw energy を使用する/しない (default: 使用しない)
.Ip "\-enormal / \-nornormal"
log energy normalization を行う/行わない (default: 行わない)．
注意：log energy normalization はマイク入力では使えません．詳しくは HTKBook 
5.9 節 "Direct Audio Input / Output" をご覧下さい．
.Ip "\-escale value"
log energy normalization 時の scaling 係数 (default: 1.0)
.Ip "\-silfloor value"
log energy normalization 時の energy silence floor を dB で指定 (default: 50.0)
.Ip "\-delwin frame"
デルタウィンドウ幅をフレーム数で指定 (default: 2)．
.Ip "\-accwin frame"
デルタデルタウィンドウ幅をフレーム数で指定 (default: 2)．
.Ip "\-lofreq frequency"
MFCCフィルタバンク計算でバンド幅制限を行う：下限の cut-off 周波数値を
指定する．"\-hifreq" も参考のこと．
.br
(default: -1 = disabled)
.Ip "\-hifreq frequency"
MFCCフィルタバンク計算でバンド幅制限を行う：上限の cut-off 周波数値を
指定する．"\-lofreq" も参考のこと．
.br
(default: -1 = disabled)
.Ip "\-sscalc"
入力ファイル先頭の無音部を用いて，入力全体に対してスペクトルサブトラク
ションを行う．各ファイルの先頭には一定時間の無音区間が含まれているとの
前提のもと，ノイズの推定を各ファイルの先頭から一定時間(\-sscalclenで指定)
のサンプルで行う．ファイル入力に対してのみ有効．
.Ip "\-sscalclen"
"\-sscalc" でのファイル先頭の無音部の長さをミリ秒で指定 (default: 300)
.Ip "\-ssload filename"
推定ノイズスペクトルをファイルから読み込み，それを用いて入力に対してス
ペクトルサブトラクションを行う．推定ノイズスペクトルファイルはあらかじめ
.I mkss
で作成する．マイク入力，adinnet入力では"\-sscalc" ではなくこちらを使う
必要がある．
.Ip "\-ssalpha value"
"\-sscalc", "\-ssload" でのスペクトルサブトラクションのアルファ係数．
大きいほど強く減じるが，歪みも大きくなる． (default: 2.0)．
.Ip "\-ssfloor value"
スペクトルサブトラクションのフロアリング係数．減じた結果パワーが 0 以
下になった部分スペクトルに対して，原信号のこの係数倍の信号を割り当てる
(default: 0.5)．
.SS GMMに基づく入力検証と棄却
.Ip "\-gmm filename"
GMMによる環境音識別および不要入力棄却において，使用するGMMを指定する．
ファイル形式は，音響モデルと同様のHMM定義ファイルである．なお，GMMの
音響特徴ベクトルは，同時に認識で使用する音韻モデルの特徴ベクトルと
同一である必要がある．
.Ip "\-gmmnum N"
GMMの計算において計算する上位ガウス分布数を指定する．GMMの混合ガウス分布
について，各フレームごとに，ここで指定された数の上位ガウス分布のみが
計算され，それ以下は計算から除外される．値値を小さくするほど
GMMの計算量を削減できるが，計算精度が劣化する．(default: 10)
.Ip "\-gmmreject string"
検証の結果誤入力として棄却すべきGMMのモデル名をコンマで区切って与える．
入力に対してGMMの尤度計算を行った結果，最尤のモデルの名前がこの文字列の
中にあれば，入力を無効として棄却する（第2パスを行わずに入力を即時キャンセル
する）．
.SS 言語モデル(N-gram)
.Ip "\-nlr 2gram_filename"
単語2-gramのファイル名(ARPA形式)．
.Ip "\-nrl rev_3gram_filename"
逆向き単語3-gramファイル名．第2パス実行時必須．
指定しない場合は探索を第1パスのみ実行する．
.Ip "\-d bingram_filename"
.I mkbingram
で作成したバイナリ形式N-gramファイルを指定する．
"-nlr", "-nrl" の代わりに使用することで起動を高速化できる．
.Ip "\-lmp lm_weight lm_penalty"
.Ip "\-lmp2 lm_weight2 lm_penalty2"
第1パスと第2パスの言語スコアの重みと単語挿入ペナルティ．
.sp
実際の仮説の言語スコアは，N-gramの対数尤
度を以下の式によってスケーリングしたものが用いられる．
.sp
lm_score1 = lm_weight * 2-gramスコア + lm_penalty
lm_score2 = lm_weight2 * 3-gramスコア + lm_penalty2
.sp
default値：モデルによって変化する
.sp
  第1パス  | 第２パス
 ---------------------------
  5.0 -1.0 |  6.0  0.0 (monophone)
  8.0 -2.0 |  8.0 -2.0 (triphone,PTM)
  9.0  8.0 | 11.0 -2.0 (triphone,PTM, setup=v2.1)
.Ip "\-transp float"
透過単語用に対して追加する単語挿入ペナルティ (default: 0.0)
.SS 単語辞書
.Ip "\-v dictionary_file"
単語辞書ファイル(必須)．
.Ip "\-silhead {WORD|WORD[OUTSYM]|#num}"
.Ip "\-siltail {WORD|WORD[OUTSYM]|#num}"
文頭／文末の無音に対応する辞書単語を指定する．
.br
(default: "<s>" / "</s>")
.sp
Juliusではこれの単語を認識仮説の始終端として固定的に扱う．以下のいずれ
かの様式で指定する．
.sp
.RS 4
.TS
.if \n+(b.=1 .nr d. \n(.c-\n(c.-1
.de 35
.ps \n(.s
.vs \n(.vu
.in \n(.iu
.if \n(.u .fi
.if \n(.j .ad
.if \n(.j=0 .na
..
.nf
.nr #~ 0
.if n .nr #~ 0.6n
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.fc
.nr 33 \n(.s
.rm 80 81
.nr 80 0
.nr 38 \w単語名
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \w単語名[出力シンボル]
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \w#単語ID
.if \n(80<\n(38 .nr 80 \n(38
.80
.rm 80
.nr 81 0
.nr 38 \w例
.if \n(81<\n(38 .nr 81 \n(38
.nr 38 \w<s>
.if \n(81<\n(38 .nr 81 \n(38
.nr 38 \w<s>[silB]
.if \n(81<\n(38 .nr 81 \n(38
.nr 38 \w#14
.if \n(81<\n(38 .nr 81 \n(38
.81
.rm 81
.nr 38 1n
.nr 79 0
.nr 40 \n(79+(0*\n(38)
.nr 80 +\n(40
.nr 41 \n(80+(3*\n(38)
.nr 81 +\n(41
.nr TW \n(81
.if t .if \n(TW>\n(.li .tm Table at line 103 file julius.man is too wide - \n(TW units
.fc  
.nr #T 0-1
.nr #a 0-1
.eo
.de T#
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.mk ##
.nr ## -1v
.ls 1
.ls
..
.ec
.ta \n(80u \n(81u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'\h'|\n(41u'例
.ta \n(80u \n(81u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'単語名\h'|\n(41u'<s>
.ta \n(80u \n(81u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'単語名[出力シンボル]\h'|\n(41u'<s>[silB]
.ta \n(80u \n(81u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'#単語ID\h'|\n(41u'#14
.fc
.nr T. 1
.T# 1
.35
.TE
.if \n-(b.=0 .nr c. \n(.c-\n(d.-7
.RE
.sp
       (単語番号は辞書ファイルの並び順に0番から)
.Ip "\-forcedict"
辞書中の誤り単語を無視して起動を続行する．エラーとなった単語エントリについて
は読み込みをスキップする．
.SS 音響モデル(HMM)
.Ip "\-h hmmfilename"
使用するHMM定義ファイル名(必須)．形式(ascii/binary)は自動判別される．
.Ip "\-hlist HMMlistfilename"
HMMlistファイル名．triphone体系のHMM使用時に必須である．
.sp
このファイルは，辞書の音素表記から生成した論理triphone名からHMM定
義名への写像を与える．詳細は付属ドキュメントを参照のこと．
.Ip "\-iwcd1 {best Nmax|avg}"
triphone使用時，第1パスの単語間triphoneの音響尤度計算方法を指定する．
.sp
best N: 同コンテキストtriphoneの上位N個の平均値 (default, N=3)
.br
max: 同コンテキストtriphoneの最大値
.br
avg: 同コンテキストtriphoneの平均値
.Ip "\-force_ccd / \-no_ccd "
単語間の音素環境依存を考慮するかしないかを明示的に指定する．指定がない場合はモデルの名前定義から推察する．
なおtriphone以外で -force_ccd を指定したときの動作は保証されない．
.Ip "\-notypecheck "
入力特徴パラメータの型チェックを無効にする．
.br
(default: チェック有効)
.SS "音響尤度計算"
Gaussian pruning は tied-mixture の音響モデルを使用時に自動的に有効になる．
tied-mixtureでない通常のモデルの場合デフォルトで無効となるが，"-gprune" 
オプションを明示的に指定することで，tmix以外のモデルに対しても適用できる．
Gaussian Selection の使用には
.I mkgshmm
で変換されたモノフォンモデルが必要である．
.Ip "\-gprune {safe|heuristic|beam|none}"
Gaussian pruning の手法を指定する．
.br
(default: tied-mixture モデルでは 'safe' (標準版) 'beam' (高速版)，
それ以外では 'none')
.Ip "\-tmix K"
Gaussian pruning 使用時に，コードブックごとに上位K個のガウス分
布を計算する．この K を指定する．小さいほど計算が速くなるが，音響尤度の誤差が
大きくなる (default: 2)
.Ip "\-gshmm hmmdefs"
Gaussian Mixture Selection 用のモノフォン音響モデルを指定する．
GMS用モノフォンは通常のモノフォンから mkgshmm(1) によって生成できる．
.br
デフォルトは指定無し(GMSを使用しない)．
.Ip "\-gsnum N"
GMS 使用時，全モノフォンの状態の中から上位 N 個の状態のみトライフォン
を計算する (default: 24)
.SS 単語間ショートポーズ
.Ip "\-iwspword"
入力中の短時間無音（ショートポーズ）に対応する単語エントリを，認識辞書
に自動追加する．モデル中で文中の無音の出現をモデル化していない言語モデ
ルを用いるときには，このオプションを指定することで認識率が改善される可
能性がある．エントリの内容は "\-iwspentry" で指定可能．
.Ip "\-iwspentry"
"\-iwspword" で追加する単語エントリを指定する．認識辞書と同じフォーマッ
トで，クォーテーションで囲って指定する．
.br
(default: "<UNK> [sp] sp sp")
.Ip "\-iwsp"
(マルチパス版のみ)より短時間のcontext-freeな単語間の無音への対応を有効
にする．具体的には，辞書中の全単語の読みの末尾にスキップ可能なショート
ポーズモデルを付加する．付加されたモデルはコンテキストの計算からは除外
される．付加するモデルは "-spmodel" で指定可能．
詳細は別ドキュメントを参照のこと．
.Ip "\-spmodel"
"-iwsp" で付加するショートポーズモデルの名前を指定する．
.br
(default: "sp")．
.SS ショートポーズセグメンテーション
ショートポーズセグメンテーションは，音声区間検出で区切れないような長い
音声を，文中の短い無音で区切りながら逐次的に認識を行う機構です．コンパ
イル時に "--enable-sp-segment" を指定することで有効になります．
.Ip "\-spdur"
(--enable-sp-segment 時) 第1パスの sp 継続時間長のしきい値(単位：フレー
ム)．ショートポーズ単語が最尤であるフレームがこの時間以上継続したら，
第１パスを中断して第２パスを実行する．(default: 10)
.SS 探索パラメータ（第1パス）
.Ip "\-b beamwidth"
第1パスのビーム幅．HMMのノード数で指定する．この値は第1パスの解探索の
幅を決める値で，認識処理時間に大きな影響を持つ．値を小さくすることで探
索範囲を狭めて認識処理を早く終わらせることができるが，探索の失敗による
認識誤りが増大する．値が大きいほど安定した結果が得られるが，幅にほぼ比
例して処理時間とメモリ量を消費する． 
.sp
default値：モデルによって変化する
  400 (monophone 使用時)
  800 (triphone,PTM 使用時)
 1000 (triphone,PTM,engine=v2.1)
.Ip "\-sepnum N"
 (./configrue --enable-lowmem2 指定時) 
辞書木から分離する高頻度語の数．
.br
(default: 150)
.Ip "\-1pass "
第1パスのみ実行する．単語3-gramの指定が無い場合自動的にこのモードになる．
.Ip "\-realtime"
.Ip "\-norealtime"
第1パスを実時間処理するかを明示的に指定する．デフォルトは，ファイル入
力について OFF (-norealtime)，マイク・NetAudio・ネットワーク入力につ
いて ON (-realtime)．このオプションは CMN と密接な関係にある：OFF の
際は，１入力ごとにその入力全体のケプストラム平均を用いてCMNを行い，
ON の場合は MAP-CMN を行う．MAP-CMN では，直前の５秒間のケプストラム平均
が初期値として用いられる．"\-progout" も参照のこと．
.Ip "\-cmnsave filename"
認識中に計算したCMNパラメータをファイルへ保存する．保存は一入力認
識のたびに行われる．すでにファイルがある場合は上書きされる．
.Ip "\-cmnload filename"
初期CMNパラメータをファイルから読み込む．ファイルは "-cmnsave" で保存
したファイル．これによってマイク入力やネットワーク入力において起動後
の入力第1発話の認識精度を改善することができる．
.Ip "\-cmnmapweight"
マイク/ネットワーク入力時に行われる MAP-CMN の初期ケプストラム平均値への
重みを指定する．値が大きいほど初期値に長時間依存し，小さいほど早く現入
力のケプストラム平均を用いるようになる．(default: 100.0)
.Ip "\-cmnnoupdate"
マイク/ネットワーク入力時，このオプションを指定することで，過去5秒間の
音声入力からの初期ケプストラム更新を行わずに，"\-cmnload" で指定された
初期ケプストラムを常に発話の初期値として MAP-CMN を行うようにできる．
.SS 探索パラメータ（第2パス）
.Ip "\-b2 hyponum"
第２パスのビーム幅．仮説数で指定する．第２パス中に，仮説の単語長ごとに
展開数がカウントされ，値がこの数を越える仮説が展開されたらそれより短い
仮説をその後展開しないようにする．探索失敗を防いで認識率を保つ効果がある．
.br
(default: 30)
.Ip "\-n candidatenum"
この数の文仮説が得られるまで探索を続ける．
得られた仮説はスコアで再ソートして結果を出力する．
(参考：-outputオプション)．
.sp
Juliusでは第2パスの探索の最適性は厳密には保証されないため，最尤候補が
常に最初に得られるとは限らない．この値が大きいほど真の最尤仮説が得られる可
能性が高くなるが，長く探索するため処理時間は大きくなる．(default: 1)
.sp
default値：エンジン設定(--enable-setup=)に依存
.br
  10  (standard)
   1  (fast,v2.1)
.Ip "\-output N"
"-n"オプションで指定した仮説数のうち，上位N個を出力する
.br
(default: 1)．
.Ip "\-cmalpha float"
単語の確信度計算におけるスムージング係数 alpha を指定する．
.br
(default: 0.05)
.Ip "\-sb score"
スコアエンベロープの幅．各フレームごとに，それまでの最大スコアからこの
幅以上離れた部分についてはscanしない．値を小さくすることで第２パスの認
識速度が速くなるが，その分計算誤りが起こる可能性が高くなる．
.br
(default: 80.0)
.Ip "\-s stack_size"
解探索中にスタックに保持する仮説の最大数．
値が大きいほど安定した結果が得られるが必要メモリ量が増える．(default: 500)
.Ip "\-m overflow_pop_times"
解探索打ち切りと判断する展開仮説数のしきい値．
展開された仮説数がこの数を越えたとき，そこで探索を打ち切る．値が大きい
ほどあきらめずに探索を続けるが，探索失敗時の処理時間は長くなる．(default: 2000)
.Ip "\-lookuprange nframe"
単語展開時に前後何フレームまでみて展開単語を決めるかを指定する．短い単
語の脱落防止に効果があるが，値が大きいと展開仮説が増えるため遅くなる．
.br
(default: 5)
.Ip "\-graphrange nframe"
単語グラフを出力する際，似た位置の同一単語をマージする．単語グラフでは
スコアや履歴，境界時間の異なる単語は独立したグラフ単語として生成されるが，
このオプションを使用することで，境界時間が大きく違わない似た位置にある
同一単語をマージし，よりコンパクトなグラフが作成できる．
ある単語について同じ単語がグラフ中にあり，その先頭フレームずれと
末尾フレームのずれが，このオプションで与えられた値以下であれば，両者を
ひとつの単語にマージする．デフォルトは 0 (マージを行わない）．
大きい値を指定するほど，似た位置にある単語がマージされやすくなる．
.br
このオプションは単語グラフ機能を ON にしてコンパイルされた Julius
でのみ有効である．
.SS "Forced alignment"
.Ip "\-walign"
認識結果に対して，単語単位のViterbiアラインメントを行う．単語ごとにマッ
チした区間，およびフレームごとの平均音響尤度が出力される．
.Ip "\-palign"
認識結果に対して，音素単位のViterbiアラインメントを行う．音素ごとにマッ
チした区間，およびフレームごとの平均音響尤度が出力される．
.Ip "\-salign"
認識結果に対して，状態単位のViterbiアラインメントを行う．状態ごとにマッ
チした区間，およびフレームごとの平均音響尤度が出力される．
.SS サーバーモジュールモード
.Ip "\-module [port]"
サーバーモジュールモードで起動する．起動後はクライアン
トからのtcpip接続を待ち，クライアントからのコマンドの処理およびクライ
アントへの認識結果や入力トリガ情報を送信する．複数文法認識はこのサーバー
モジュールモードでのみ使用することができる．詳細は関連ドキュメント参照
のこと．ポート番号のデフォルトは 10500 である．サンプルのクライアント
として
.I jcontrol
が付属している．
.Ip "\-outcode [W][L][P][S][C][w][l][p][s]"
サーバーモジュールモード時に，クライアントへ送信する認識結果の内容を指
定する．それぞれ 'W' は単語の通常の出力文字列，'L' はN-gramエントリ，'P'
は音素列，'S' はスコア，'C'は単語信頼度を表す．大文字は第2パス，小文字は第1
パスに対応する．例えば第２パスの単語と音素列のみを送信したい場合は，
"-outcode WP"のように指定する．
.SS メッセージ出力
.Ip "\-separatescore"
言語スコアと音響スコアをわけて出力する．
.Ip "\-quiet "
音素列やスコアを省略して，ベストの仮説の単語列だけ出力する．
.Ip "\-progout "
第1パスの途中結果を一定時間おきに漸次出力する．
.Ip "\-proginterval msec"
\-progout 時の出力インターバルを指定(単位：ミリ秒)
.Ip "\-demo"
"-progout -quiet" と等価．
.Ip "\-charconv from to"
出力テキストのコーディング変換を行う．
from はモデル等で使用している変換元の文字コード名，to は変
換先の出力コード名を指定する．
.br
from, to の値として，Linux では "iconv --list" で得られるコード名リスト
の中から指定可能である．Windows では，"ansi", "mac", "oem", "utf-7",
"utf-8", "sjis", "euc" および任意のコードページ番号が指定できる．
"ansi" および "oem" は，その OS でデフォルトでサポートされている
ローカルコード（日本版なら Shift-JIS）を表す．
.SS その他
.Ip "\-debug"
大量のデバッグ用内部メッセージを出力する．
.Ip "\-C jconffile"
jconf設定ファイルを読み込む．これらの実行時オプションをあらかじめ記述
して読み込ませることができる．また，あるjconf設定ファイル内でこのオプ
ションにより，別のjconf設定ファイルを include することができる．
.Ip "\-check wchmm"
(デバッグ用)木構造化辞書の構造を対話的にチェックする．
.Ip "\-check triphone"
(デバッグ用)音響モデル(とHMMList)による辞書上の単語の実際のマッピング
を対話的にチェックする．
.Ip "\-setting"
コンパイル時のエンジン設定を出力して終了する．
.Ip "\-help"
簡単なオプション一覧を表示した後，終了する．
.SH "EXAMPLES"
使用例については付属のチュートリアルをご覧下さい．
.SH "NOTICE"
jconf設定ファイル内でのファイルパスの指定について：ファイルを相対パス
で指定する場合，それは実行時のカレントディレクトリではなく，そのjconf
ファイルが置いてある場所からの相対パスとして解釈されます．注意してくだ
さい．
.SH "SEE ALSO"
julian(1), jcontrol(1), adinrec(1), adintool(1), mkbingram(1),　mkbinhmm(1),
mkgsmm(1), wav2mfcc(1), mkss(1), 
.PP
http://julius.sourceforge.jp/
.SH DIAGNOSTICS
正常終了した場合，
.I Julius
は exit status として 0 を返します．エラーが見付かった場合は異常終了し，
exist status として 1 を返します．
.PP
入力ファイルが見つからない場合やうまく読み込めなかった場合は，そのファ
イルに対する処理をスキップします．
.SH BUGS
.I Julius
で使用できるモデルにはサイズやタイプに若干の制限があります．詳しくはパッ
ケージに付属のドキュメントを参照してください．
.PP
バグ報告・問い合わせ・コメントなどは 
julius@kuis.kyoto-u.ac.jp または
julius@is.aist-nara.ac.jp までお願いします．
.SH COPYRIGHT
Copyright (c) 1991-2006 京都大学 河原研究室
.br
Copyright (c) 1997-2000 情報処理振興事業協会(IPA)
.br
Copyright (c) 2000-2005 奈良先端科学技術大学院大学 鹿野研究室
.br
Copyright (c) 2005-2006 名古屋工業大学 Julius開発チーム
.SH AUTHORS
.Ip "Rev.1.0 (1998/02/20)"
河原 達也  と  李 晃伸 (京都大学)
.br
が設計を行いました．
.sp
李晃伸 (京都大学)
.br
が実装しました．
.Ip "Rev.1.1 (1998/04/14)"
.Ip "Rev.1.2 (1998/10/31)"
.Ip "Rev.2.0 (1999/02/20)"
.Ip "Rev.2.1 (1999/04/20)"
.Ip "Rev.2.2 (1999/10/04)"
.Ip "Rev.3.0 (2000/02/14)"
.Ip "Rev.3.1 (2000/05/11)"
李 晃伸 (京都大学)
.br
が実装しました．
.Ip "Rev.3.2 (2001/08/15)"
.Ip "Rev.3.3 (2002/09/11)"
.Ip "Rev.3.4 (2003/10/01)"
.Ip "Rev.3.4.1 (2004/02/25)"
.Ip "Rev.3.4.2 (2004/04/30)"
李 晃伸 (奈良先端大)
.br
が実装しました．
.Ip "Rev.3.5 (2005/11/11)"
.Ip "Rev.3.5.1 (2006/03/31)"
.Ip "Rev.3.5.2 (2006/07/31)"
李 晃伸 (名古屋工業大学)
.br
が実装しました．
.SH "THANKS TO"
このプログラムは Rev.3.1 まで，情報処理振興事業協会(IPA)独創的情報技術育
成事業「日本語ディクテーションの基本ソフトウェアの開発」(代表者：鹿野
清宏 奈良先端科学技術大学院大学教授)の援助を受けて行われました．
.PP
Rev.3.2以降は「情報処理学会 連続音声認識コンソーシアム」において公開さ
れています．
.PP
Windows DLL版 は板野秀樹氏(名古屋大学)の手によって作成・公開されています．
.PP
Windows Microsoft Speech API対応版は住吉貴志氏(京都大学)の手によるもの
です．
.PP
上記の協力・貢献してくださった方々，およびさまざまな助言・コメントをい
ただく関係者各位に深く感謝いたします．
.PP
また，開発に際して言語モデルを提供して頂いた伊藤克亘氏(電子技術総合研
究所)，音素モデルを提供して頂いた武田一哉氏(名古屋大学)をはじめとする
関係各位に感謝します．また伊藤克亘氏をはじめ多くの方に動作確認とデバッ
グを行って頂きましたことを感謝します．
.PP
最後に，バグ報告や提案をしていただいている Julius users ML のメンバー
の方々をはじめとするLinuxコミュニティの方々に感謝します．
