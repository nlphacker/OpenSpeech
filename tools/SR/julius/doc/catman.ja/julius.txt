JULIUS(1)                                                            JULIUS(1)



NAME
       Julius - open source multi-purpose LVCSR engine

SYNOPSIS
       julius [-C jconffile] [options ...]

DESCRIPTION
       Julius は数万語を対象とした大語彙連続音声認識を行うことのできるフリーの
       認識エンジンです．単語3-gramを用いた2パス構成の段階的探索により高精度な
       認識を行うことができます．

       Julius   を用いて音声認識を行うには，他にN-gram言語モデル，認識用単語辞
       書，および音韻モデルが必要です．標準的なモデル形式(ARPA標準 形 式 お よ
       びHTK 形式)をサポートしており，任意の単語・音素単位を用いることができま
       す．ユーザは自分の作成した言語モデルや音響モデルを組み合わせて任意の 規
       模 や対象の音声認識システムを構築することができます．基本モデルの入手先
       や作成方法については，付属ドキュメントなどを別途ご覧ください．

       認識対象としてマイク入力，録音済みの音声波形ファイルおよび特徴抽出し た
       パラメータファイルに対応しています．語彙数の上限は 65,535 語です．

使用モデル
       Julius では以下のモデルを用います．

       音素モデル
                 音 素HMM(Hidden  Markov  Model) を 用います．音素モデル(mono-
                 phone)，音素環境 依 存 モ デ ル(triphone)，tied-mixture モ デ
                 ル，phonetic  tied-mixture モデルを扱えます．音素環境依存モデ
                 ルの場合は単語間の依存関係も考慮されます． HTK のHMM定義言 語
                 で書かれたHMM定義ファイルを読み込むことができます．また，付属
                 ツール mkbinhmm であらかじめバイナリ形式に変換しておけば高 速
                 に読み込むことができます．

       言語モデル
                 言 語 モデルとして2-gramおよび逆向きの3-gramを用います． ARPA
                 standard format およびそれらを付属の mkbingram で変換したバイ
                 ナリ形式のN-gramを読み込むことができます．

音声入力
       デ バイスからの直接入力および音声ファイルの認識を行えます．マイクロフォ
       ン端子やDatLink(NetAudio)，およびクライアントツール adintool を用 い た
       ネッ ト ワー ク 経 由での直接入力に対応しています．音声ファイルの形式は
       16bit WAVE ファイル（無圧縮）およびRAWファイル (16bit,  BigEndian)   で
       す． コンパイル時にlibsndfileをリンクすることでさらに多くの形式に対応可
       能です．また，HTK形式の特徴パラメータファイルで与えることもできます．

       注意：Julius内部で計算できる特徴量はMFCC_E_D_N_Zのみです．これ以外の 特
       徴抽出を必要とするHMMを使う場合は，マイク入力や音声波形ファイル入力は使
       えません．その場合，HTKなどで抽出した特徴パラメータファイルを与えるよう
       にして下さい．

探索アルゴリズム
       Julius の認識処理は2パス構成です．まず第1パスで入力全体を完全に処理し，
       中間結果を出力します．モデルは単語2-gramと単語HMMの木構造ネットワークを
       用います．解探索はleft-to-rightにフレーム同期ビーム探索を行います．

       第2パスでは3-gramを用いて逆向きに探索を行い，より精度の高い認識結果を求
       めます．第1パスの中間結果を絞り込み＋先読み情報として用い，単語単位のス
       タックデコーディングを行います．

       音 素環境依存モデル(triphone)を用いたときは，第1パスおよび第2パスで単語
       間の音素環境依存を考慮します．またtied-mixture やphonetic  tied-mixture
       モデルではGaussian pruningによる高速な音響尤度計算を行います．

       アルゴリズムの詳細に関しては別途関連文書をご覧ください．

OPTIONS
       以 下のオプションで使用モデルやパラメータなどを指定します．コマンドライ
       ン上ですべて指定することもできますが， jconf設定ファイルとして１つの テ
       キ ストファイル内にまとめて記述しておき，起動時に "-C" で指定することが
       できます．

       以下は全てのオプションの説明です．

   音声入力ソース
       -input {rawfile|mfcfile|mic|adinnet|netaudio|stdin}
              音声データの入力ソースを選択する．それぞれ 'rawfile' は波形 ファ
              イル， adinnet' は adintool などのクライアントからのネットワーク
              経由入力，' stdin' は標準入力からの入力を指定する．

              サポートする音声波形ファイル形式は 16bit WAV(モノラル，無圧縮)お
              よび RAW (16bit, モノラル, BigEndian) ．コンパイル時にlibsndfile
              があればさらに多くの形式が扱える．実際にその実行バイナリでどの形
              式 がサポートされているかはオプション "-help" で確認できる．なお
              標準入力についてはWAVおよびRAWのみサポートする．
              (default: mfcfile)

       -filelist file
              (-input rawfile|mfcfile 時) 認識対象のファイルが複数ある場合に，
              そのリストを与えてバッチ処理させる．

       -adport portnum
              (-input adinnet 時) adinnet で使用するポート番号．
              (default: 5530)

       -NA server:unit
              (-input  netaudio) 接続するDatLinkサーバ名とユニットID．netaudio
              使用時必須．

       -zmean  -nozmean
              音声入力時に，DC成分の除去を行うかどうかを指定する．DC成分はファ
              イ ル 入 力 の場合全体から計算される．マイク入力の場合は，最初の
              48000 サンプル（16kHzサンプリングで3秒）から算出された値がその後
              用いられる． (default: 行わない (-nozmean))

       -zmeanframe  -nozmeanframe
              音 声 入力時に，フレーム単位でDC成分の除去を行うかどうかを指定す
              る．これはHTKのZMEANSOURCEオプションと同じ動作と な る．"-zmean"
              と同時に指定できない．(default: 行わない (-nozmeanframe))

       -nostrip
              録音デバイスによって生じることのある，録音開始時あるいは終了時の
              無効な 0 値サンプルの自動除去を行わないようにする．デフォルト は
              自動除去を行う．

       -record directory
              directory 以下に，認識された入力音声データを連番で自動保存する．
              音声データは切り出された一入力ごとにファイルに記録される．ファイ
              ル 名は，認識開始時のシステム時間を表す"年.月日.時分秒.wav" とい
              う名前で保存される．ファイル形式は WAV,16bit,monoral,無圧縮 であ
              る．"-rejectshort"併用時は，棄却された入力も保存される．

       -rejectshort msec
              msec  で指定されたミリ秒より短い入力を棄却し，認識を行わない．モ
              ジュールモード時はクライアントに '<REJECTED REASON="..."/>' が出
              力される．"-record" オプション併用時は，このオプションにより棄却
              された入力も保存される．

   音声区間検出
       -cutsilence

       -nocutsilence
              入力音声に対して音声区間の検出を行うかど う か を 明 示 的 に 指
              定．(default: mic または adinnet は ON, ファイル入力は OFF)

       -lv threslevel
              波形の振幅レベルのしきい値( 0 - 32767)．振幅がこの値を越えたとき
              に音声区間の開始とみなし，次にこの値を下回ったときに音声区間終了
              とする(default: 2000)．

       -zc zerocrossnum
              １秒あたりの零交差数のしきい値 (default: 60)

       -headmargin msec
              音声区間開始部のマージン．単位はミリ秒
              (default: 300)

       -tailmargin msec
              音声区間終了部のマージン．単位はミリ秒
              (default: 400)

   音響分析
       -smpFreq frequency
              音声のサンプリング周波数を Hz で指定する．あるいは"-smpPeriod"で
              も指定可能．このサンプリング周波数は使用する音響モデルの学習条件
              と 一 致 す る必要があることに注意すること．マイク入力および RAW
              ファイル入力時には，このサンプリング周波数を明示的に指定する必要
              がある．"-fsize", "-fshift", "-delwin", "-accwin" で指定する値に
              も注意すること．
              (default: 16000 (Hz = 625ns))

       -smpPeriod period
              音声のサンプリング周期をナノ秒で指定する．あるいは"-smpFreq"でも
              指定可能．このサンプリング周波数は使用する音響モデルの学習条件と
              一致する必要があることに注意すること．マイク入力および RAW  ファ
              イル入力時には，このサンプリング周波数を明示的に指定する必要があ
              る．"-fsize", "-fshift", "-delwin", "-accwin" で指定する値にも注
              意すること．
              (default: 625 (ns = 16000Hz))

       -fsize sample
              窓サイズをサンプル数で指定 (default: 400)．

       -fshift sample
              フレームシフト幅をサンプル数で指定 (default: 160)．

       -preemph value
              Pre-emphasis 係数 (default: 0.97)

       -fbank num
              Filterbank channel の数 (default: 24)

       -ceplif num
              Cepstral liftering 係数 (default: 22)

       -rawe / -norawe
              Pre-emphasis  前の raw energy を使用する/しない (default: 使用し
              ない)

       -enormal / -nornormal
              log energy normalization を行う/行わない (default: 行わない)．注
              意：log  energy normalization はマイク入力では使えません．詳しく
              は HTKBook 5.9 節 "Direct Audio Input / Output" をご覧下さい．

       -escale value
              log energy normalization 時の scaling 係数 (default: 1.0)

       -silfloor value
              log energy normalization 時の energy silence floor を dB で指 定
              (default: 50.0)

       -delwin frame
              デルタウィンドウ幅をフレーム数で指定 (default: 2)．

       -accwin frame
              デルタデルタウィンドウ幅をフレーム数で指定 (default: 2)．

       -lofreq frequency
              MFCC フィルタバンク計算でバンド幅制限を行う：下限の cut-off 周波
              数値を指定する．"-hifreq" も参考のこと．
              (default: -1 = disabled)

       -hifreq frequency
              MFCCフィルタバンク計算でバンド幅制限を行う：上限の cut-off 周 波
              数値を指定する．"-lofreq" も参考のこと．
              (default: -1 = disabled)

       -sscalc
              入力ファイル先頭の無音部を用いて，入力全体に対してスペクトルサブ
              トラクションを行う．各ファイルの先頭には一定時間の無音区間が含ま
              れているとの前提のもと，ノイズの推定を各ファイルの先頭から一定時
              間(-sscalclenで指定) のサンプルで行う．ファイル入力に対しての み
              有効．

       -sscalclen
              "-sscalc" でのファイル先頭の無音部の長さをミリ秒で指定 (default:
              300)

       -ssload filename
              推定ノイズスペクトルをファイルから読み込み，それを用いて入力に対
              してスペクトルサブトラクションを行う．推定ノイズスペクトルファイ
              ルはあらかじめ mkss で作成する．マ イ ク 入 力，adinnet 入 力 で
              は"-sscalc" ではなくこちらを使う必要がある．

       -ssalpha value
              "-sscalc",  "-ssload" でのスペクトルサブトラクションのアルファ係
              数．大きいほど強く減じるが，歪みも大きくなる． (default: 2.0)．

       -ssfloor value
              スペクトルサブトラクションのフロアリング係数．減じた結果パワーが
              0 以下になった部分スペクトルに対して，原信号のこの係数倍の信号を
              割り当てる (default: 0.5)．

   GMMに基づく入力検証と棄却
       -gmm filename
              GMMによる環境音識別および不要入力棄却において，使用するGMMを指定
              す る．ファイル形式は，音響モデルと同様のHMM定義ファイルである．
              なお，GMMの音響特徴ベクトルは，同時に認識で使用する音韻モデル の
              特徴ベクトルと同一である必要がある．

       -gmmnum N
              GMMの計算において計算する上位ガウス分布数を指定する．GMMの混合ガ
              ウス分布について，各フレームごとに，ここで指定された数の上位ガウ
              ス分布のみが計算され，それ以下は計算から除外される．値値を小さく
              するほど GMMの計算量を削減 で き る が， 計 算 精 度 が 劣 化 す
              る．(default: 10)

       -gmmreject string
              検 証の結果誤入力として棄却すべきGMMのモデル名をコンマで区切って
              与える．入力に対してGMMの尤度計算を行った結果，最尤のモデルの 名
              前 がこの文字列の中にあれば，入力を無効として棄却する（第2パスを
              行わずに入力を即時キャンセルする）．

   言語モデル(N-gram)
       -nlr 2gram_filename
              単語2-gramのファイル名(ARPA形式)．

       -nrl rev_3gram_filename
              逆向き単語3-gramファイル名．第2パス実行時必須．指定しない場合 は
              探索を第1パスのみ実行する．

       -d bingram_filename
              mkbingram   で 作 成 し たバイナリ形式N-gramファイルを指定する．
              "-nlr", "-nrl" の代わりに使用することで起動を高速化できる．

       -lmp lm_weight lm_penalty

       -lmp2 lm_weight2 lm_penalty2
              第1パスと第2パスの言語スコアの重みと単語挿入ペナルティ．

              実際の仮説の言語スコアは，N-gramの対数尤度を以下の式によっ て ス
              ケーリングしたものが用いられる．

              lm_score1  =  lm_weight  * 2-gramスコア + lm_penalty lm_score2 =
              lm_weight2 * 3-gramスコア + lm_penalty2

              default値：モデルによって変化する

                第1パス  | 第２パス
               ---------------------------
                5.0 -1.0 |  6.0  0.0 (monophone)
                8.0 -2.0 |  8.0 -2.0 (triphone,PTM)
                9.0  8.0 | 11.0 -2.0 (triphone,PTM, setup=v2.1)

       -transp float
              透過単語用に対して追加する単語挿入ペナルティ (default: 0.0)

   単語辞書
       -v dictionary_file
              単語辞書ファイル(必須)．

       -silhead {WORD|WORD[OUTSYM]|#num}

       -siltail {WORD|WORD[OUTSYM]|#num}
              文頭／文末の無音に対応する辞書単語を指定する．
              (default: "<s>" / "</s>")

              Juliusではこれの単語を認識仮説の始終端として固定的に扱う．以下の
              いずれかの様式で指定する．


                                     例
           単語名                    <s>
           単語名[出力シンボル]   <s>[silB]
           #単語ID                   #14

              (単語番号は辞書ファイルの並び順に0番から)

       -forcedict
              辞書中の誤り単語を無視して起動を続行する．エラーとなった単語エン
              トリについては読み込みをスキップする．

   音響モデル(HMM)
       -h hmmfilename
              使用するHMM定義ファイル名(必須)．形式(ascii/binary)は自動判別 さ
              れる．

       -hlist HMMlistfilename
              HMMlistファイル名．triphone体系のHMM使用時に必須である．

              こ のファイルは，辞書の音素表記から生成した論理triphone名からHMM
              定義名への写像を与える．詳細は付属ドキュメントを参照のこと．

       -iwcd1 {best Nmax|avg}
              triphone使用時，第1パスの単語間triphoneの音響尤度計算方法を指 定
              する．

              best N: 同コンテキストtriphoneの上位N個の平均値 (default, N=3)
              max: 同コンテキストtriphoneの最大値
              avg: 同コンテキストtriphoneの平均値

       -force_ccd / -no_ccd
              単語間の音素環境依存を考慮するかしないかを明示的に指定する．指定
              がない場合はモデルの名前定義から推察する．な おtriphone 以 外 で
              -force_ccd を指定したときの動作は保証されない．

       -notypecheck
              入力特徴パラメータの型チェックを無効にする．
              (default: チェック有効)

   音響尤度計算
       Gaussian pruning は tied-mixture の音響モデルを使用時に自動的に有効にな
       る． tied-mixtureでない通常のモデルの場合デフォ ル ト で 無 効 と な る
       が，"-gprune"  オプションを明示的に指定することで，tmix以外のモデルに対
       しても適用できる． Gaussian Selection の使用には mkgshmm で変換されたモ
       ノフォンモデルが必要である．

       -gprune {safe|heuristic|beam|none}
              Gaussian pruning の手法を指定する．
              (default:  tied-mixture  モデルでは 'safe' (標準版) 'beam' (高速
              版)，それ以外では 'none')

       -tmix K
              Gaussian pruning 使用時に，コードブックごとに上位K個のガウス分布
              を 計算する．この K を指定する．小さいほど計算が速くなるが，音響
              尤度の誤差が大きくなる (default: 2)

       -gshmm hmmdefs
              Gaussian Mixture Selection 用のモノフォン音響モデルを指定す る．
              GMS 用モノフォンは通常のモノフォンから mkgshmm(1) によって生成で
              きる．
              デフォルトは指定無し(GMSを使用しない)．

       -gsnum N
              GMS 使用時，全モノフォンの状態の中から上位 N 個の状態のみトラ イ
              フォンを計算する (default: 24)

   単語間ショートポーズ
       -iwspword
              入力中の短時間無音（ショートポーズ）に対応する単語エントリを，認
              識辞書に自動追加する．モデル中で文中の無音の出現をモデル化してい
              ない言語モデルを用いるときには，このオプションを指定することで認
              識率が改善される可能性がある．エントリの内容は "-iwspentry" で指
              定可能．

       -iwspentry
              "-iwspword"   で 追 加する単語エントリを指定する．認識辞書と同じ
              フォーマットで，クォーテーションで囲って指定する．
              (default: "<UNK> [sp] sp sp")

       -iwsp  (マルチパス版のみ)より短時間のcontext-freeな単語間の無音への対応
              を有効にする．具体的には，辞書中の全単語の読みの末尾にスキップ可
              能なショートポーズモデルを付加する．付加されたモデルはコンテキス
              ト の 計算からは除外される．付加するモデルは "-spmodel" で指定可
              能．詳細は別ドキュメントを参照のこと．

       -spmodel
              "-iwsp" で付加するショートポーズモデルの名前を指定する．
              (default: "sp")．

   ショートポーズセグメンテーション
       ショートポーズセグメンテーションは，音声区間検出で区切れないような長 い
       音 声を，文中の短い無音で区切りながら逐次的に認識を行う機構です．コンパ
       イル時に "--enable-sp-segment" を指定することで有効になります．

       -spdur (--enable-sp-segment 時) 第1パスの sp 継続時間長のしき い 値( 単
              位： フレーム)．ショートポーズ単語が最尤であるフレームがこの時間
              以上継続したら，第１パスを中断して第２パスを実行す る．(default:
              10)

   探索パラメータ（第1パス）
       -b beamwidth
              第1 パスのビーム幅．HMMのノード数で指定する．この値は第1パスの解
              探索の幅を決める値で，認識処理時間に大きな影響を持つ．値を小さく
              す る ことで探索範囲を狭めて認識処理を早く終わらせることができる
              が，探索の失敗による認識誤りが増大する．値が大きいほど安定した結
              果が得られるが，幅にほぼ比例して処理時間とメモリ量を消費する．

              default値：モデルによって変化する
                400 (monophone 使用時)
                800 (triphone,PTM 使用時)
               1000 (triphone,PTM,engine=v2.1)

       -sepnum N
               (./configrue  --enable-lowmem2 指定時) 辞書木から分離する高頻度
              語の数．
              (default: 150)

       -1pass 第1パスのみ実行する．単語3-gramの指定が無い場合自動的にこの モー
              ドになる．

       -realtime

       -norealtime
              第1 パスを実時間処理するかを明示的に指定する．デフォルトは，ファ
              イル入力について OFF (-norealtime)，マイク・NetAudio・ネットワー
              ク入力について ON (-realtime)．このオプションは CMN と密接な関係
              にある：OFF の際は，１入力ごとにその入力全体のケプストラム平均を
              用いてCMNを行い， ON の場合は MAP-CMN を行う．MAP-CMN では，直前
              の５秒間のケプストラム平均が初期値として用いら れ る．"-progout"
              も参照のこと．

       -cmnsave filename
              認 識中に計算したCMNパラメータをファイルへ保存する．保存は一入力
              認識のたびに行われる．すでにファイルがある場合は上書きされる．

       -cmnload filename
              初期CMNパラメータをファイルから読み込む．ファイル は  "-cmnsave"
              で保存したファイル．これによってマイク入力やネットワーク入力にお
              いて起動後の入力第1発話の認識精度を改善することができる．

       -cmnmapweight
              マイク/ネットワーク入力時に行われる MAP-CMN の初期ケプストラム平
              均値への重みを指定する．値が大きいほど初期値に長時間依存し，小さ
              いほど早く現入力のケプストラム平均を用いるようにな る．(default:
              100.0)

       -cmnnoupdate
              マイク/ネットワーク入力時，このオプションを指定することで，過去5
              秒間の音声入力からの初期ケプストラム更新を行わ ず に，"-cmnload"
              で 指定された初期ケプストラムを常に発話の初期値として MAP-CMN を
              行うようにできる．

   探索パラメータ（第2パス）
       -b2 hyponum
              第２パスのビーム幅．仮説数で指定する．第２パス中に，仮説の単語長
              ごとに展開数がカウントされ，値がこの数を越える仮説が展開されたら
              それより短い仮説をその後展開しないようにする．探索失敗を防いで認
              識率を保つ効果がある．
              (default: 30)

       -n candidatenum
              この数の文仮説が得られるまで探索を続ける．得られた仮説はスコアで
              再ソートして結果を出力する． (参考：-outputオプション)．

              Juliusでは第2パスの探索の最適性は厳密には保証されないため，最 尤
              候補が常に最初に得られるとは限らない．この値が大きいほど真の最尤
              仮説が得られる可能性が高くなるが，長く探索するため処理時間は大き
              くなる．(default: 1)

              default値：エンジン設定(--enable-setup=)に依存
                10  (standard)
                 1  (fast,v2.1)

       -output N
              "-n"オプションで指定した仮説数のうち，上位N個を出力する
              (default: 1)．

       -cmalpha float
              単語の確信度計算におけるスムージング係数 alpha を指定する．
              (default: 0.05)

       -sb score
              スコアエンベロープの幅．各フレームごとに，それまでの最大スコアか
              らこの幅以上離れた部分についてはscanしない．値を小さくすることで
              第２パスの認識速度が速くなるが，その分計算誤りが起こる可能性が高
              くなる．
              (default: 80.0)

       -s stack_size
              解探索中にスタックに保持する仮説の最大数．値が大きいほど安定した
              結果が得られるが必要メモリ量が増える．(default: 500)

       -m overflow_pop_times
              解探索打ち切りと判断する展開仮説数のしきい値．展開された仮説数が
              この数を越えたとき，そこで探索を打ち切る．値が大きいほどあきらめ
              ず に 探 索を続けるが，探索失敗時の処理時間は長くなる．(default:
              2000)

       -lookuprange nframe
              単語展開時に前後何フレームまでみて展開単語を決めるかを指定する．
              短い単語の脱落防止に効果があるが，値が大きいと展開仮説が増えるた
              め遅くなる．
              (default: 5)

       -graphrange nframe
              単語グラフを出力する際，似た位置の同一単語をマージする．単語グラ
              フではスコアや履歴，境界時間の異なる単語は独立したグラフ単語とし
              て生成されるが，このオプションを使用することで，境界時間が大きく
              違わない似た位置にある同一単語をマージし，よりコンパクトなグラフ
              が作成できる．ある単語について同じ単語がグラフ中にあり，その先頭
              フレームずれと末尾フレームのずれが，このオプションで与えられた値
              以下であれば，両者をひとつの単語にマージする．デフォルトは  0  (
              マージを行わない）．大きい値を指定するほど，似た位置にある単語が
              マージされやすくなる．
              このオプションは単語グラフ機能を ON にしてコン パ イ ル さ れ た
              Julius でのみ有効である．

   Forced alignment
       -walign
              認 識結果に対して，単語単位のViterbiアラインメントを行う．単語ご
              とにマッチした区間，およびフレームごとの平均音響尤度が出力 さ れ
              る．

       -palign
              認 識結果に対して，音素単位のViterbiアラインメントを行う．音素ご
              とにマッチした区間，およびフレームごとの平均音響尤度が出力 さ れ
              る．

       -salign
              認 識結果に対して，状態単位のViterbiアラインメントを行う．状態ご
              とにマッチした区間，およびフレームごとの平均音響尤度が出力 さ れ
              る．

   サーバーモジュールモード
       -module [port]
              サー バー モ ジュー ルモードで起動する．起動後はクライアントから
              のtcpip接続を待ち，クライアントからのコマンドの処理およびクラ イ
              アントへの認識結果や入力トリガ情報を送信する．複数文法認識はこの
              サーバーモジュールモードでのみ使用することができる．詳細は関連ド
              キュ メント参照のこと．ポート番号のデフォルトは 10500 である．サ
              ンプルのクライアントとして jcontrol が付属している．

       -outcode [W][L][P][S][C][w][l][p][s]
              サーバーモジュールモード時に，クライアントへ送信する認識結果の内
              容 を 指 定 す る． そ れ ぞれ 'W' は単語の通常の出力文字列，'L'
              はN-gramエントリ，'P' は音素列，'S' はスコア，'C'は単語信頼度 を
              表 す．大文字は第2パス，小文字は第1 パスに対応する．例えば第２パ
              スの単語と音素列のみを送信したい場合は， "-outcode WP"のように指
              定する．

   メッセージ出力
       -separatescore
              言語スコアと音響スコアをわけて出力する．

       -quiet 音素列やスコアを省略して，ベストの仮説の単語列だけ出力する．

       -progout
              第1パスの途中結果を一定時間おきに漸次出力する．

       -proginterval msec
              -progout 時の出力インターバルを指定(単位：ミリ秒)

       -demo  "-progout -quiet" と等価．

       -charconv from to
              出力テキストのコーディング変換を行う． from はモデル等で使用して
              いる変換元の文字コード名，to は変換先の出力コード名を指定する．
              from, to の値として，Linux では "iconv --list" で得られるコー ド
              名 リ ス ト の中から指定可能である．Windows では，"ansi", "mac",
              "oem", "utf-7", "utf-8", "sjis", "euc" および任意のコードペー ジ
              番 号が指定できる． "ansi" および "oem" は，その OS でデフォルト
              でサポートされているローカルコード（日本版なら Shift-JIS） を 表
              す．

   その他
       -debug 大量のデバッグ用内部メッセージを出力する．

       -C jconffile
              jconf 設定ファイルを読み込む．これらの実行時オプションをあらかじ
              め記述して読み込ませることができる．また，あるjconf設定ファイ ル
              内でこのオプションにより，別のjconf設定ファイルを include するこ
              とができる．

       -check wchmm
              (デバッグ用)木構造化辞書の構造を対話的にチェックする．

       -check triphone
              (デバッグ用)音響モデル(とHMMList)による辞書上の単語の実際の マッ
              ピングを対話的にチェックする．

       -setting
              コンパイル時のエンジン設定を出力して終了する．

       -help  簡単なオプション一覧を表示した後，終了する．

EXAMPLES
       使用例については付属のチュートリアルをご覧下さい．

NOTICE
       jconf設定ファイル内でのファイルパスの指定について：ファイルを相対パスで
       指定する場合，それは実行時のカレントディレクトリでは な く， そ のjconf
       ファ イルが置いてある場所からの相対パスとして解釈されます．注意してくだ
       さい．

SEE ALSO
       julian(1),   jcontrol(1),   adinrec(1),   adintool(1),    mkbingram(1),
       　mkbinhmm(1), mkgsmm(1), wav2mfcc(1), mkss(1),

       http://julius.sourceforge.jp/

DIAGNOSTICS
       正 常終了した場合， Julius は exit status として 0 を返します．エラーが
       見付かった場合は異常終了し， exist status として 1 を返します．

       入力ファイルが見つからない場合やうまく読み込めなかった場合は，その ファ
       イルに対する処理をスキップします．

BUGS
       Julius で使用できるモデルにはサイズやタイプに若干の制限があります．詳し
       くはパッケージに付属のドキュメントを参照してください．

       バグ報告・問い合わせ・コメントなどは julius@kuis.kyoto-u.ac.jp ま た は
       julius@is.aist-nara.ac.jp までお願いします．

COPYRIGHT
       Copyright (c) 1991-2006 京都大学 河原研究室
       Copyright (c) 1997-2000 情報処理振興事業協会(IPA)
       Copyright (c) 2000-2005 奈良先端科学技術大学院大学 鹿野研究室
       Copyright (c) 2005-2006 名古屋工業大学 Julius開発チーム

AUTHORS
       Rev.1.0 (1998/02/20)
              河原 達也  と  李 晃伸 (京都大学)
              が設計を行いました．

              李晃伸 (京都大学)
              が実装しました．

       Rev.1.1 (1998/04/14)

       Rev.1.2 (1998/10/31)

       Rev.2.0 (1999/02/20)

       Rev.2.1 (1999/04/20)

       Rev.2.2 (1999/10/04)

       Rev.3.0 (2000/02/14)

       Rev.3.1 (2000/05/11)
              李 晃伸 (京都大学)
              が実装しました．

       Rev.3.2 (2001/08/15)

       Rev.3.3 (2002/09/11)

       Rev.3.4 (2003/10/01)

       Rev.3.4.1 (2004/02/25)

       Rev.3.4.2 (2004/04/30)
              李 晃伸 (奈良先端大)
              が実装しました．

       Rev.3.5 (2005/11/11)

       Rev.3.5.1 (2006/03/31)

       Rev.3.5.2 (2006/07/31)
              李 晃伸 (名古屋工業大学)
              が実装しました．

THANKS TO
       こ のプログラムは Rev.3.1 まで，情報処理振興事業協会(IPA)独創的情報技術
       育成事業「日本語ディクテーションの基本ソフトウェアの開発」(代表者：鹿野
       清宏 奈良先端科学技術大学院大学教授)の援助を受けて行われました．

       Rev.3.2 以降は「情報処理学会 連続音声認識コンソーシアム」において公開さ
       れています．

       Windows DLL版 は板野秀樹氏(名古屋大学)の手によって作成・公開されてい ま
       す．

       Windows  Microsoft Speech API対応版は住吉貴志氏(京都大学)の手によるもの
       です．

       上記の協力・貢献してくださった方々，およびさまざまな助言・コメントを い
       ただく関係者各位に深く感謝いたします．

       また，開発に際して言語モデルを提供して頂いた伊藤克亘氏(電子技術総合研究
       所)，音素モデルを提供して頂いた武田一哉氏(名古屋大学)をはじめとする関係
       各 位に感謝します．また伊藤克亘氏をはじめ多くの方に動作確認とデバッグを
       行って頂きましたことを感謝します．

       最後に，バグ報告や提案をしていただいている Julius users ML のメンバーの
       方々をはじめとするLinuxコミュニティの方々に感謝します．



4.3 Berkeley Distribution            LOCAL                           JULIUS(1)
